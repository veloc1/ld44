[gd_scene load_steps=29 format=2]

[ext_resource path="res://objects/noise_backgroind.gd" type="Script" id=1]
[ext_resource path="res://objects/noise_backgroind_noise.tres" type="Texture" id=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
constant = Color( 0.182342, 0.972656, 0.136622, 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 0.0, 1, 30.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=3]

[sub_resource type="VisualShaderNodeScalarFunc" id=4]
function = 0

[sub_resource type="VisualShaderNodeDotProduct" id=5]

[sub_resource type="VisualShaderNodeTexture" id=6]
source = 2
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeVectorCompose" id=7]

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=9]

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=11]

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=13]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=15]

[sub_resource type="VisualShaderNodeScalarFunc" id=16]
function = 1

[sub_resource type="VisualShaderNodeColorOp" id=17]

[sub_resource type="VisualShaderNodeTexture" id=18]
source = 2
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=19]

[sub_resource type="VisualShaderNodeVectorCompose" id=20]

[sub_resource type="VisualShaderNodeScalarOp" id=21]

[sub_resource type="VisualShaderNodeInput" id=22]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=23]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeColorOp" id=24]

[sub_resource type="VisualShader" id=25]
code = "shader_type canvas_item;



void vertex() {
// Вывод:0

}

void fragment() {
// Color:10
	vec3 n_out10p0;
	float n_out10p1;
	n_out10p0 = vec3(0.182342,0.972656,0.136622);
	n_out10p1 = 1.000000;

// Вход:2
	vec3 n_out2p0;
	n_out2p0 = vec3(UV,0.0);

// VectorDecompose:4
	float n_out4p0;
	float n_out4p1;
	float n_out4p2;
	n_out4p0 = n_out2p0.x;
	n_out4p1 = n_out2p0.y;
	n_out4p2 = n_out2p0.z;

// Вход:7
	float n_out7p0;
	n_out7p0 = TIME;

// ScalarOp:11
	float n_in11p1 = 30.00000;
	float n_out11p0;
	n_out11p0 = n_out7p0 / n_in11p1;

// ScalarOp:6
	float n_out6p0;
	n_out6p0 = n_out4p0 + n_out11p0;

// ScalarOp:8
	float n_in8p1 = 1.00000;
	float n_out8p0;
	n_out8p0 = n_out6p0 * n_in8p1;

// ScalarFunc:13
	float n_out13p0;
	n_out13p0 = sin(n_out11p0);

// ScalarOp:12
	float n_out12p0;
	n_out12p0 = n_out4p1 + n_out13p0;

// VectorCompose:5
	float n_in5p2 = 0.00000;
	vec3 n_out5p0;
	n_out5p0 = vec3( n_out8p0 , n_out12p0 , n_in5p2 );

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = texture( TEXTURE , n_out5p0.xy );
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// ColorOp:9
	vec3 n_out9p0;
	n_out9p0=vec3(1.0)-(vec3(1.0)-n_out10p0)*(vec3(1.0)-n_out3p0);

// Вход:18
	vec3 n_out18p0;
	n_out18p0 = vec3(UV,0.0);

// VectorDecompose:19
	float n_out19p0;
	float n_out19p1;
	float n_out19p2;
	n_out19p0 = n_out18p0.x;
	n_out19p1 = n_out18p0.y;
	n_out19p2 = n_out18p0.z;

// Вход:21
	float n_out21p0;
	n_out21p0 = TIME;

// ScalarOp:23
	float n_in23p1 = 10.00000;
	float n_out23p0;
	n_out23p0 = n_out21p0 / n_in23p1;

// ScalarFunc:25
	float n_out25p0;
	n_out25p0 = cos(n_out23p0);

// ScalarOp:24
	float n_out24p0;
	n_out24p0 = n_out19p1 + n_out25p0;

// ScalarOp:20
	float n_out20p0;
	n_out20p0 = n_out19p0 + n_out23p0;

// ScalarOp:22
	float n_in22p1 = 2.00000;
	float n_out22p0;
	n_out22p0 = n_out20p0 * n_in22p1;

// VectorCompose:17
	float n_in17p2 = 0.00000;
	vec3 n_out17p0;
	n_out17p0 = vec3( n_out24p0 , n_out22p0 , n_in17p2 );

// Texture:16
	vec3 n_out16p0;
	float n_out16p1;
	{
		vec4 _tex_read = texture( TEXTURE , n_out17p0.xy );
		n_out16p0 = _tex_read.rgb;
		n_out16p1 = _tex_read.a;
	}

// ColorOp:26
	vec3 n_out26p0;
	n_out26p0=vec3(1.0)-(vec3(1.0)-n_out9p0)*(vec3(1.0)-n_out16p0);

// DotProduct:15
	float n_out15p0;
	n_out15p0 = dot( n_out10p0 , n_out3p0 );

// Вывод:0
	COLOR.rgb = n_out26p0;
	COLOR.a = n_out15p0;

}

void light() {
// Вывод:0

}
"
graph_offset = Vector2( -155, 271.476 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 880, 160 )
nodes/fragment/2/node = SubResource( 10 )
nodes/fragment/2/position = Vector2( -780, -100 )
nodes/fragment/3/node = SubResource( 18 )
nodes/fragment/3/position = Vector2( 240, 100 )
nodes/fragment/4/node = SubResource( 19 )
nodes/fragment/4/position = Vector2( -640, -20 )
nodes/fragment/5/node = SubResource( 20 )
nodes/fragment/5/position = Vector2( 0, 160 )
nodes/fragment/6/node = SubResource( 21 )
nodes/fragment/6/position = Vector2( -400, 140 )
nodes/fragment/7/node = SubResource( 22 )
nodes/fragment/7/position = Vector2( -780, 180 )
nodes/fragment/8/node = SubResource( 23 )
nodes/fragment/8/position = Vector2( -220, 160 )
nodes/fragment/9/node = SubResource( 24 )
nodes/fragment/9/position = Vector2( 440, 60 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 280, 0 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -600, 160 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -400, -40 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -560, 100 )
nodes/fragment/15/node = SubResource( 5 )
nodes/fragment/15/position = Vector2( 620, 20 )
nodes/fragment/16/node = SubResource( 6 )
nodes/fragment/16/position = Vector2( 280, 340 )
nodes/fragment/17/node = SubResource( 7 )
nodes/fragment/17/position = Vector2( 0, 520 )
nodes/fragment/18/node = SubResource( 8 )
nodes/fragment/18/position = Vector2( -780, 300 )
nodes/fragment/19/node = SubResource( 9 )
nodes/fragment/19/position = Vector2( -640, 380 )
nodes/fragment/20/node = SubResource( 11 )
nodes/fragment/20/position = Vector2( -400, 540 )
nodes/fragment/21/node = SubResource( 12 )
nodes/fragment/21/position = Vector2( -780, 580 )
nodes/fragment/22/node = SubResource( 13 )
nodes/fragment/22/position = Vector2( -220, 560 )
nodes/fragment/23/node = SubResource( 14 )
nodes/fragment/23/position = Vector2( -600, 560 )
nodes/fragment/24/node = SubResource( 15 )
nodes/fragment/24/position = Vector2( -400, 360 )
nodes/fragment/25/node = SubResource( 16 )
nodes/fragment/25/position = Vector2( -600, 480 )
nodes/fragment/26/node = SubResource( 17 )
nodes/fragment/26/position = Vector2( 620, 260 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 0, 5, 0, 3, 0, 4, 0, 6, 0, 6, 0, 8, 0, 8, 0, 5, 0, 7, 0, 11, 0, 11, 0, 6, 1, 4, 1, 12, 0, 12, 0, 5, 1, 13, 0, 12, 1, 11, 0, 13, 0, 3, 0, 9, 1, 15, 0, 0, 1, 10, 0, 15, 0, 3, 0, 15, 1, 17, 0, 16, 0, 18, 0, 19, 0, 19, 0, 20, 0, 20, 0, 22, 0, 21, 0, 23, 0, 23, 0, 20, 1, 19, 1, 24, 0, 25, 0, 24, 1, 23, 0, 25, 0, 22, 0, 17, 1, 24, 0, 17, 0, 16, 0, 26, 1, 9, 0, 26, 0, 26, 0, 0, 0, 10, 0, 9, 0 )

[sub_resource type="ShaderMaterial" id=26]
shader = SubResource( 25 )

[node name="noise_backgroind" type="Node2D"]
script = ExtResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 26 )
scale = Vector2( 2, 2 )
texture = ExtResource( 2 )
centered = false
